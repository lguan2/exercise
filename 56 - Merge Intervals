Given a collection of intervals, merge all overlapping intervals.

Example 1:

Input: [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].
Example 2:

Input: [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considerred overlapping.
-----------------------------------------------    
    
    public List<Interval> merge(List<Interval> intervals) {
        List<Interval> res = new ArrayList<>();
        if(intervals == null || intervals.size() == 0)
            return res;
        Collections.sort(intervals, (i1, i2) -> (i1.start - i2.start));
        Interval cur = intervals.get(0);
        for(int i = 1; i < intervals.size(); i++){
            Interval next = intervals.get(i);
            if(next.start > cur.end){
                res.add(cur);
                cur = next;
            }else{
                cur.end = Math.max(cur.end, next.end);
            }
        }
        res.add(cur);
        return res;  
    }
