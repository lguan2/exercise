Given a linked list, swap every two adjacent nodes and return its head.

Example:

Given 1->2->3->4, you should return the list as 2->1->4->3.
Note:

Your algorithm should use only constant extra space.
You may not modify the values in the list's nodes, only nodes itself may be changed.
 
    -----------------------------------------
    public ListNode swapPairs(ListNode head) {
        if(head == null || head.next == null)
            return head;
        //fake是不能动的
        ListNode fake= new ListNode(-1);
        ListNode pre = fake;
        pre.next = head;
        ListNode p1 = head;
        ListNode p2 = head.next;
        while(p1 != null && p2 != null){
            pre.next = p2;
            p1.next = p2.next;
            p2.next = p1;
            pre = p1;
            p1 = pre.next;
            p2 = p1 == null ? null : p1.next;
        }
        return fake.next;
        
    }
    
    -----------------------------------------
    
    AC fake是不能动的
