Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

Example:
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Input: word1 = “coding”, word2 = “practice”
Output: 3
Input: word1 = "makes", word2 = "coding"
Output: 1
Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.


----------------------------------------

class Solution {
    public int shortestDistance(String[] words, String word1, String word2) {
        int pre = -1;
        int res = Integer.MAX_VALUE;
        String temp = null;
        for(int i = 0; i < words.length; i++){
            if(words[i].equals(word1) || words[i].equals(word2)){
                if(pre != -1 && !words[i].equals(temp)){
                    res = Math.min(res, i-pre);
                }
                pre = i;
                temp = words[i];
            }
            
        }
        return res;
        
    }
}

--------------------------------------
需要注意的是，看当前找到的word和之前的是不是一样的，如果和之前的是一样的则不更新res
