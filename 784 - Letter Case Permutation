Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.

Examples:
Input: S = "a1b2"
Output: ["a1b2", "a1B2", "A1b2", "A1B2"]

Input: S = "3z4"
Output: ["3z4", "3Z4"]

Input: S = "12345"
Output: ["12345"]
Note:

S will be a string with length at most 12.
S will consist only of letters or digits.

------------------------------------


class Solution {
    public List<String> letterCasePermutation(String s) {
        List<String> res = new ArrayList<>();
        helper(res, s, "", 0);
        return res; 
    }
    
    public void helper(List<String> res, String s, String cur, int pos){
        if(pos == s.length()){
            res.add(cur);
            return;
        }
        if(Character.isDigit(s.charAt(pos))){
            helper(res, s, cur + s.substring(pos, pos+1), pos+1);
        }else{
            helper(res, s, cur+Character.toLowerCase(s.charAt(pos)), pos+1);
            helper(res, s, cur+Character.toUpperCase(s.charAt(pos)), pos+1);
        }
    }
}

-----------------------

AC, O(2^n)
