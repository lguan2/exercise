    public List<List<Integer>> premuteUnique(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        if (nums == null || nums.length == 0) return res;
        boolean[] visited = new boolean[nums.length];
        helper(nums, visited, res, new ArrayList<>());
        return res;
    }

    public void helper(int[] nums, boolean[] visited, List<List<Integer>> res, List<Integer> list) {
        if (list.size() == nums.length) {
            res.add(new ArrayList<>(list));
            return;
        }
        int i = 0;
        while (i < nums.length) {
            if (!visited[i]) {
                list.add(nums[i]);
                visited[i] = true;
                helper(nums, visited, res, list);
                list.remove(list.size() - 1);
                visited[i] = false;
            }
            i++;
            while (i < nums.length && nums[i] == nums[i - 1]) {
                i++;
            }
        }
    }
