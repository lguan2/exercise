    int[][] dirs = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};

    public boolean exist(char[][] board, String word) {
        if (board == null || board[0] == null || word == null) return false;
        int m = board.length;
        int n = board[0].length;
        boolean[][] visited = new boolean[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (helper(board, word, i, j, visited, 0)) {
                    return true;
                }
            }
        }
        return false;

    }

    public boolean helper(char[][] board, String word, int x, int y, boolean[][] visited, int pos) {
        if (pos == word.length()) return true;
        if (x < 0 || x == board.length || y < 0 || y == board[0].length || visited[x][y]
                || board[x][y] != word.charAt(pos))
            return false;
        visited[x][y] = true;
        for (int[] dir : dirs) {
            int i = x + dir[0];
            int j = x + dir[1];
            if (helper(board, word, i, j, visited, pos + 1)) {
                return true;
            }
        }
        visited[x][y] = false;
        return false;
    }

