    public static int maxProfits(int[] prices) {
        int res = 0;
        if (prices == null || prices.length <= 1) return res;
        int len = prices.length, leftMin = prices[0], rightMax = prices[len-1];
        int[] left = new int[len];
        int[] right = new int[len];
        left[0] = 0;
        right[len - 1] = 0;
        for(int i = 1; i < len; i++){
            left[i] = Math.max(prices[i] - leftMin, left[i - 1]);
            leftMin = Math.min(leftMin, prices[i]);
        }
        for (int j = len - 2; j >= 0; j--) {
            right[j] = Math.max(rightMax - prices[j], right[j + 1]);
            rightMax = Math.max(rightMax, prices[j]);
        }
        for (int i = 0; i < len; i++) {
            res = Math.max(left[i] + right[i], res);
        }
        return res;
    }
