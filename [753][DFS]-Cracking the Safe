    public String crackSafe(int n, int k) {
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < n; i++)
            sb.append('0');
        Set<String> visited = new HashSet<>();
        visited.add(sb.toString());
        int goal = (int) Math.pow(k, n);
        dfs(sb, visited, goal, n, k);
        return sb.toString();
        
        
    }
    
    private boolean dfs(StringBuilder sb, Set<String> visited, int goal, int n, int k){
        if(visited.size() == goal)
            return true;
        String pre = sb.toString().substring(sb.length()-n+1);
        for(int i = 0; i < k; i++){
            String next = pre + i;
            if(!visited.contains(next)){
                visited.add(next);
                sb.append(i);
                if(dfs(sb, visited, goal, n, k)){
                    return true;
                }else{
                    visited.remove(next);
                    sb.setLength(sb.length()-1);
                }
            }
        }
        return false; 
    }
    -----------------------------------------
    
    时间复杂度？？？
