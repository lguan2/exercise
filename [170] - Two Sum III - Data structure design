Design and implement a TwoSum class. It should support the following operations: add and find.

add - Add the number to an internal data structure.
find - Find if there exists any pair of numbers which sum is equal to the value.

Example 1:

add(1); add(3); add(5);
find(4) -> true
find(7) -> false
Example 2:

add(3); add(1); add(2);
find(3) -> true
find(6) -> false
---------------------------

class TwoSum {
    Map<Integer, Integer> map = new HashMap<>();
    

    /** Initialize your data structure here. */
    public TwoSum() {
        
    }
    
    /** Add the number to an internal data structure.. */
    public void add(int number) {
        map.put(number, map.getOrDefault(number, 0) + 1);
    }
    
    /** Find if there exists any pair of numbers which sum is equal to the value. */
    public boolean find(int value) {
        if(value%2 == 0 && map.containsKey(value/2) && map.get(value/2) >=2)
            return true;
        for(Integer key : map.keySet()){
            if(map.containsKey(value-key) && value-key != key){
                return true;
            }
        }
        return false;
        
    }
}
------------------
主要是注意两个相等的相加为target的情况，注意find的实现
