Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:

Input:  [1,2,3,4]
Output: [24,12,8,6]
Note: Please solve it without division and in O(n).

Follow up:
Could you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.)

-------------------------------------
    public int[] productExceptSelf(int[] nums) {
        int len = nums.length;
        int[] res = new int[len];
        res[len - 1] = 1;
        for (int i = len - 2; i >= 0; i--) {
            res[i] = nums[i + 1] * res[i + 1];
        }
        //int left = 1;
        // left不能置成1
        int left = nums[0];
        for (int i = 1; i < len; i++) {
            res[i] *= left;
            left *= nums[i];
        }
        return res;
    }
   ----------------------------
   
   AC 这种算法不用可以考虑0， left不能认为是1
